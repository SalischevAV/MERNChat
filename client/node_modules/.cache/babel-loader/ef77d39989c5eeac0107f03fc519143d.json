{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\devor\\\\Documents\\\\NodeChat\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{APPEND_MESSAGE,IS_TYPING,NOT_TYPING,JUST_JOINED,LEAVE_CHAT}from'../types';var initialState={messages:[],typist:null,joined:false};var chatReducer=function chatReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case APPEND_MESSAGE:return _objectSpread(_objectSpread({},state),{},{messages:state.messages.concat([action.payload])});case IS_TYPING:return _objectSpread(_objectSpread({},state),{},{typist:action.payload.handle});case NOT_TYPING:return _objectSpread(_objectSpread({},state),{},{typist:null});case JUST_JOINED:return _objectSpread(_objectSpread({},state),{},{joined:action.payload.success});default:return state;}};export default chatReducer;","map":{"version":3,"sources":["C:/Users/devor/Documents/NodeChat/client/src/redux/reducers/chatReducer.js"],"names":["APPEND_MESSAGE","IS_TYPING","NOT_TYPING","JUST_JOINED","LEAVE_CHAT","initialState","messages","typist","joined","chatReducer","state","action","type","concat","payload","handle","success"],"mappings":"wKACA,OAAQA,cAAR,CAAwBC,SAAxB,CAAmCC,UAAnC,CAA+CC,WAA/C,CAA4DC,UAA5D,KAA8E,UAA9E,CAEA,GAAMC,CAAAA,YAAY,CAAC,CACfC,QAAQ,CAAE,EADK,CAEfC,MAAM,CAAE,IAFO,CAGfC,MAAM,CAAE,KAHO,CAAnB,CAMA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAgC,IAA/BC,CAAAA,KAA+B,2DAAvBL,YAAuB,IAATM,CAAAA,MAAS,2CAChD,OAAOA,MAAM,CAACC,IAAd,EACI,IAAKZ,CAAAA,cAAL,CACI,sCACOU,KADP,MAEIJ,QAAQ,CAAEI,KAAK,CAACJ,QAAN,CAAeO,MAAf,CAAsB,CAACF,MAAM,CAACG,OAAR,CAAtB,CAFd,GAIJ,IAAKb,CAAAA,SAAL,CACI,sCACOS,KADP,MAEIH,MAAM,CAAEI,MAAM,CAACG,OAAP,CAAeC,MAF3B,GAIJ,IAAKb,CAAAA,UAAL,CACI,sCACOQ,KADP,MAEIH,MAAM,CAAE,IAFZ,GAIJ,IAAKJ,CAAAA,WAAL,CACI,sCACOO,KADP,MAEIF,MAAM,CAACG,MAAM,CAACG,OAAP,CAAeE,OAF1B,GAIJ,QAAS,MAAON,CAAAA,KAAP,CArBb,CAuBH,CAxBD,CAyBA,cAAeD,CAAAA,WAAf","sourcesContent":["\r\nimport {APPEND_MESSAGE, IS_TYPING, NOT_TYPING, JUST_JOINED, LEAVE_CHAT } from '../types';\r\n\r\nconst initialState={\r\n    messages: [],\r\n    typist: null,\r\n    joined: false,\r\n}\r\n\r\nconst chatReducer = (state = initialState, action)=>{\r\n    switch(action.type){\r\n        case APPEND_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: state.messages.concat([action.payload]),\r\n            };\r\n        case IS_TYPING:\r\n            return {\r\n                ...state,\r\n                typist: action.payload.handle,\r\n            };\r\n        case NOT_TYPING:\r\n            return{\r\n                ...state,\r\n                typist: null,\r\n            };\r\n        case JUST_JOINED:\r\n            return{\r\n                ...state,\r\n                joined:action.payload.success,\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\nexport default chatReducer;\r\n"]},"metadata":{},"sourceType":"module"}