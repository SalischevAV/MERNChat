{"ast":null,"code":"import { APPEND_MESSAGE, IS_TYPING, NOT_TYPING, JUST_JOINED, LEAVE_CHAT } from '../types';\nconst initialState = {\n  messages: [],\n  typist: null,\n  joined: false\n};\n\nconst chatReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case APPEND_MESSAGE:\n      return { ...state,\n        messages: state.messages.concat([action.payload])\n      };\n\n    case IS_TYPING:\n      return { ...state,\n        typist: action.payload.handle\n      };\n\n    case NOT_TYPING:\n      return { ...state,\n        typist: null\n      };\n\n    case JUST_JOINED:\n      return { ...state,\n        joined: action.payload.success\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default chatReducer;","map":{"version":3,"sources":["C:/Users/devor/Documents/NodeChat/client/src/redux/reducers/chatReducer.js"],"names":["APPEND_MESSAGE","IS_TYPING","NOT_TYPING","JUST_JOINED","LEAVE_CHAT","initialState","messages","typist","joined","chatReducer","state","action","type","concat","payload","handle","success"],"mappings":"AACA,SAAQA,cAAR,EAAwBC,SAAxB,EAAmCC,UAAnC,EAA+CC,WAA/C,EAA4DC,UAA5D,QAA8E,UAA9E;AAGA,MAAMC,YAAY,GAAC;AACfC,EAAAA,QAAQ,EAAE,EADK;AAEfC,EAAAA,MAAM,EAAE,IAFO;AAGfC,EAAAA,MAAM,EAAE;AAHO,CAAnB;;AAMA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAgC;AAChD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKZ,cAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHJ,QAAAA,QAAQ,EAAEI,KAAK,CAACJ,QAAN,CAAeO,MAAf,CAAsB,CAACF,MAAM,CAACG,OAAR,CAAtB;AAFP,OAAP;;AAIJ,SAAKb,SAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHH,QAAAA,MAAM,EAAEI,MAAM,CAACG,OAAP,CAAeC;AAFpB,OAAP;;AAIJ,SAAKb,UAAL;AACI,aAAM,EACF,GAAGQ,KADD;AAEFH,QAAAA,MAAM,EAAE;AAFN,OAAN;;AAIJ,SAAKJ,WAAL;AACI,aAAM,EACF,GAAGO,KADD;AAEFF,QAAAA,MAAM,EAACG,MAAM,CAACG,OAAP,CAAeE;AAFpB,OAAN;;AAIJ;AAAS,aAAON,KAAP;AArBb;AAuBH,CAxBD;;AAyBA,eAAeD,WAAf","sourcesContent":["\r\nimport {APPEND_MESSAGE, IS_TYPING, NOT_TYPING, JUST_JOINED, LEAVE_CHAT } from '../types';\r\n\r\n\r\nconst initialState={\r\n    messages: [],\r\n    typist: null,\r\n    joined: false,\r\n}\r\n\r\nconst chatReducer = (state = initialState, action)=>{\r\n    switch(action.type){\r\n        case APPEND_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: state.messages.concat([action.payload]),\r\n            };\r\n        case IS_TYPING:\r\n            return {\r\n                ...state,\r\n                typist: action.payload.handle,\r\n            };\r\n        case NOT_TYPING:\r\n            return{\r\n                ...state,\r\n                typist: null,\r\n            };\r\n        case JUST_JOINED:\r\n            return{\r\n                ...state,\r\n                joined:action.payload.success,\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\nexport default chatReducer;\r\n"]},"metadata":{},"sourceType":"module"}