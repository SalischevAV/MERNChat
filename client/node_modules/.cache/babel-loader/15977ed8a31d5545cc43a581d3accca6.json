{"ast":null,"code":"import { APPEND_MESSAGE, IS_TYPING, NOT_TYPING, JUST_JOINED, LEAVE_CHAT } from '../types';\nexport function AppendMessage(data) {\n  return async dispatch => {\n    console.log({ ...data\n    });\n\n    try {\n      const response = await fetch('http://localhost:8080/api/messages', {\n        headers: {\n          'Contetnt-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify(data)\n      });\n      const req = await response.json(); // console.log(req)\n\n      dispatch({\n        type: APPEND_MESSAGE,\n        payload: { ...data\n        }\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n}\nexport function isTyping(data) {\n  return {\n    type: IS_TYPING,\n    payload: { ...data\n    }\n  };\n}\nexport function justJoined(bool) {\n  return {\n    type: JUST_JOINED,\n    payload: {\n      success: bool\n    }\n  };\n}\nexport function notTyping(data) {\n  return {\n    type: NOT_TYPING,\n    payload: { ...data\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/devor/Documents/NodeChat/client/src/redux/actions/chatActions.js"],"names":["APPEND_MESSAGE","IS_TYPING","NOT_TYPING","JUST_JOINED","LEAVE_CHAT","AppendMessage","data","dispatch","console","log","response","fetch","headers","method","body","JSON","stringify","req","json","type","payload","err","isTyping","justJoined","bool","success","notTyping"],"mappings":"AAAA,SAAQA,cAAR,EAAwBC,SAAxB,EAAmCC,UAAnC,EAA+CC,WAA/C,EAA4DC,UAA5D,QAA8E,UAA9E;AAEA,OAAO,SAASC,aAAT,CAAuBC,IAAvB,EAA4B;AAC/B,SAAO,MAAMC,QAAN,IAAkB;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,EAAC,GAAGH;AAAJ,KAAZ;;AACA,QAAG;AACC,YAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAD,EAAsC;AAC9DC,QAAAA,OAAO,EAAC;AAAC,2BAAiB;AAAlB,SADsD;AAE9DC,QAAAA,MAAM,EAAE,MAFsD;AAG9DC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,IAAf;AAHwD,OAAtC,CAA5B;AAKA,YAAMW,GAAG,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAlB,CAND,CAOC;;AAEAX,MAAAA,QAAQ,CAAC;AACLY,QAAAA,IAAI,EAAEnB,cADD;AAELoB,QAAAA,OAAO,EAAE,EAAC,GAAGd;AAAJ;AAFJ,OAAD,CAAR;AAIH,KAbD,CAcA,OAAMe,GAAN,EAAU;AACNb,MAAAA,OAAO,CAACC,GAAR,CAAYY,GAAZ;AACH;AAEJ,GApBD;AAqBH;AAED,OAAO,SAASC,QAAT,CAAkBhB,IAAlB,EAAuB;AAC1B,SAAM;AACFa,IAAAA,IAAI,EAAElB,SADJ;AAEFmB,IAAAA,OAAO,EAAE,EAAC,GAAGd;AAAJ;AAFP,GAAN;AAIH;AAED,OAAO,SAASiB,UAAT,CAAoBC,IAApB,EAAyB;AAC5B,SAAM;AACFL,IAAAA,IAAI,EAAEhB,WADJ;AAEFiB,IAAAA,OAAO,EAAE;AAACK,MAAAA,OAAO,EAAED;AAAV;AAFP,GAAN;AAIH;AAED,OAAO,SAASE,SAAT,CAAmBpB,IAAnB,EAAwB;AAC3B,SAAM;AACFa,IAAAA,IAAI,EAAEjB,UADJ;AAEFkB,IAAAA,OAAO,EAAC,EAAC,GAAGd;AAAJ;AAFN,GAAN;AAIH","sourcesContent":["import {APPEND_MESSAGE, IS_TYPING, NOT_TYPING, JUST_JOINED, LEAVE_CHAT } from '../types';\r\n\r\nexport function AppendMessage(data){\r\n    return async dispatch => {\r\n        console.log({...data})\r\n        try{\r\n            const response = await fetch('http://localhost:8080/api/messages',{\r\n                headers:{'Contetnt-Type': 'application/json'},\r\n                method: 'POST',\r\n                body: JSON.stringify(data),\r\n            });\r\n            const req = await response.json();\r\n            // console.log(req)\r\n\r\n            dispatch({\r\n                type: APPEND_MESSAGE,\r\n                payload: {...data},\r\n            })\r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport function isTyping(data){\r\n    return{\r\n        type: IS_TYPING,\r\n        payload: {...data},\r\n    }\r\n}\r\n\r\nexport function justJoined(bool){\r\n    return{\r\n        type: JUST_JOINED,\r\n        payload: {success: bool},\r\n    }\r\n}\r\n\r\nexport function notTyping(data){\r\n    return{\r\n        type: NOT_TYPING,\r\n        payload:{...data},\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}