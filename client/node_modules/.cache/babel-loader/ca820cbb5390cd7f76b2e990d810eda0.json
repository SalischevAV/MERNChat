{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devor\\\\Documents\\\\NodeChat\\\\client\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector, connect } from 'react-redux';\nimport { AppendMessage, justJoined, isTyping, notTyping } from './redux/actions/chatActions';\nimport io from 'socket.io-client';\nimport { store } from './redux/store';\nconst socket = io();\nsocket.on('online', data => {\n  console.log(data.description);\n});\nsocket.on('joined', data => {\n  store.dispatch(justJoined(data.success));\n});\nsocket.on('typing', data => {\n  store.dispatch(isTyping(data));\n});\nsocket.on('chat', data => {\n  store.dispatch(AppendMessage(data));\n});\nsocket.on('no_typing', data => {\n  store.dispatch(notTyping(data));\n});\n\nfunction App(props) {\n  const [handle, setHandle] = useState('');\n  const [textArea, setTextArea] = useState('');\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    socket.emit('online', {\n      description: 'user._id: 1234567890'\n    });\n  }, []);\n\n  const handleTyping = () => {\n    socket.emit('typing', {\n      'handle': handle\n    });\n  };\n\n  const noMoreTyping = () => {\n    socket.emit('no_typing', {\n      'handle': handle\n    });\n  };\n\n  const handleSubmit = (handle, message) => {\n    if (handle === '' || message === '') {\n      setError('Handle or message should not be null');\n      return;\n    }\n\n    setError('');\n    socket.emit('chat', {\n      'handle': handle,\n      'message': message\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: props.logo,\n    className: \"App-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, props.joine)));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/devor/Documents/NodeChat/client/src/App.js"],"names":["React","useState","useEffect","useDispatch","useSelector","connect","AppendMessage","justJoined","isTyping","notTyping","io","store","socket","on","data","console","log","description","dispatch","success","App","props","handle","setHandle","textArea","setTextArea","error","setError","emit","handleTyping","noMoreTyping","handleSubmit","message","logo","joine"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector, connect } from 'react-redux'\nimport { AppendMessage, justJoined, isTyping, notTyping } from './redux/actions/chatActions';\nimport io from 'socket.io-client';\nimport { store } from './redux/store';\n\n\nconst socket = io();\n\nsocket.on('online', data => {\n  console.log(data.description);\n})\n\nsocket.on('joined', data => {\n  store.dispatch(justJoined(data.success));\n});\nsocket.on('typing', data => {\n  store.dispatch(isTyping(data));\n});\nsocket.on('chat', data => {\n  store.dispatch(AppendMessage(data));\n});\nsocket.on('no_typing', data => {\n  store.dispatch(notTyping(data));\n})\n\nfunction App(props) {\n  const [handle, setHandle] = useState('');\n  const [textArea, setTextArea] = useState('');\n  const [error, setError] = useState(null);\n\n  useEffect(()=>{\n    socket.emit('online', {description: 'user._id: 1234567890'})\n  },[]);\n\n  const handleTyping = ()=>{\n    socket.emit('typing', {\n      'handle': handle,\n    });\n  };\n\n  const noMoreTyping = ()=>{\n    socket.emit('no_typing', {\n      'handle': handle,\n    });\n  };\n\n  const handleSubmit = (handle, message)=>{\n    if(handle==='' || message===''){\n      setError('Handle or message should not be null');\n      return\n    }\n    setError('');\n    socket.emit('chat',{\n      'handle': handle,\n      'message': message,\n    })\n  }\n\n  return (\n    <div className='App'>\n      <header className='App-header'>\n        <img src={props.logo} className='App-logo' />\n      </header>\n      <div id='main'>\n        <div id='status'>\n          {props.joine}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}